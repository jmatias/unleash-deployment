apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "unleash.fullname" . }}
  labels:
{{ include "unleash.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "unleash.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "unleash.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}

      initContainers:
        - name: init-stolon
          image: postgres
          env:
            - name:  PGDATABASE
              value: {{.Values.postgresql.database}}
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.posgresqlExistingSecret.name}}
                  key: {{.Values.posgresqlExistingSecret.passwordKey}}
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{.Values.posgresqlExistingSecret.name}}
                  key: {{.Values.posgresqlExistingSecret.usernameKey}}
            - name: PGHOST
              value: {{.Values.postgresql.url}}
          "command": [
            "sh", "-c",
            "for i in $(seq 1 200); do psql -l && exit 0 || sleep 3; done; exit 1"
          ]

      volumes:
        - name: serverfiles
          configMap:
            name: unleash-serverfiles
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: UNLEASH_HOST_URL
              value: {{.Values.ingress.host}}
            - name: UNLEASH_DATABASE_URL
              value: {{.Values.postgresql.url}}
            - name: HEADER_BACKGROUND_COLOR
              value: {{.Values.headerBackgroundColor | quote}}
            - name: UNLEASH_DATABASE
              value: {{.Values.postgresql.database}}
            - name: UNLEASH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.Values.posgresqlExistingSecret.name}}
                  key: {{.Values.posgresqlExistingSecret.passwordKey}}
            - name: UNLEASH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{.Values.posgresqlExistingSecret.name}}
                  key: {{.Values.posgresqlExistingSecret.usernameKey}}
          ports:
            - name: http
              containerPort: 4242
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            successThreshold: 1
            failureThreshold: 5
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 15
            successThreshold: 1
            failureThreshold: 5
            periodSeconds: 10


          volumeMounts:
            - name: serverfiles
              mountPath: /usr/node/app/mount
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
